vocabularyDatabaseSchema = 'main',
cohortTable = 'cohort')
Sys.setenv(WEBAPI_PASSWORD = "biom_demo_demo")
Sys.setenv(WEBAPI_USERNAME = "demo")
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
ROhdsiWebApi::authorizeWebApi(baseUrl = 'http://34.253.42.86:8080/WebAPI/',
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"))
#
baseUrl = 'http://34.253.42.86:8080/WebAPI/'
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# Run the application
run_app(baseUrl = baseUrl,
connection = connection,
cdmDbSchema = 'main',
vocabularyDatabaseSchema = 'main',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
ROhdsiWebApi::authorizeWebApi(baseUrl = 'http://34.253.42.86:8080/WebAPI/',
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"))
#
baseUrl = 'http://34.253.42.86:8080/WebAPI/'
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# Run the application
run_app(baseUrl = baseUrl,
connection = connection,
cdmDbSchema = 'main',
vocabularyDatabaseSchema = 'main',
cohortTable = 'cohort')
Sys.setenv("DATABASECONNECTOR_JAR_FOLDER" = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(dbms = "postgresql",
server = "54.77.2.157/OMOP",
port = 5432,
user = "cdm1",
password = "biom_demo_cdm1")
sql <- "SELECT TOP 10 * FROM person;"
sql <- translate(sql, targetDialect = "postgresql")
library(SqlRender)
sql <- "SELECT TOP 10 * FROM person;"
sql <- translate(sql, targetDialect = "postgresql")
querySql(connection, sql)
library(DatabaseConnector)
querySql(connection, sql)
querySql(connection, "SELECT  * FROM OMOP.cdm1.DOSE_ERA LIMIT 1000;")
querySql(connection, "SELECT  * FROM DOSE_ERA LIMIT 1000;")
querySql(connection, "SELECT * FROM DOSE_ERA LIMIT 1000;")
shiny::runApp('~/R/CohortsExport_Demo')
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = "cdm1",
password = "biom_demo_cdm1",
server = "54.77.2.157/OMOP/cdm1",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
connectionDetails <- Eunomia::getEunomiaConnectionDetails()
connection <- connect(connectionDetails = connectionDetails)
createConnectionDetails(dbms = "postgresql",
user = "cdm1",
password = "biom_demo_cdm1",
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = "cdm1",
password = "biom_demo_cdm1",
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
shiny::runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
connectionDetails <- createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- connect(connectionDetails = connectionDetails)
sql <- "SELECT TOP 10 * FROM person;"
sql <- translate(sql, targetDialect = "postgresql")
results <- querySql(connection, sql = sql)
View(results)
shiny::runApp('~/R/prova_conn_ATLAS')
connectionDetails <- createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- connect(connectionDetails = connectionDetails)
sql <- "SELECT TOP 10 * FROM person;"
sql <- translate(sql, targetDialect = "postgresql")
querySql(connection, sql = sql)
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
runApp('~/R/prova_conn_ATLAS')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'main',
vocabularyDatabaseSchema = 'main',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
tableList <- c()
# check which tables contain patient-level data
for (i in tables) {
tableFields <- DatabaseConnector::dbListFields(conn = connection,
name = i)
if("PERSON_ID" %in% tableFields)
tableList <- c(tableList, i)
}
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# connection = DatabaseConnector::connect(connectionDetails = Eunomia::getEunomiaConnectionDetails())
# Run the application with Eunomia and OHDSI demo ATLAS
# baseUrl = 'http://api.ohdsi.org/WebAPI'
# run_app(baseUrl = baseUrl,
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with Eunomia and BIOMERIS demo ATLAS
# baseUrl = 'http://34.253.42.86:8080/WebAPI'
# run_app(baseUrl = baseUrl,
#         authMethod = "db",
#         webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
#         webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
#         connection = connection,
#         cdmDbSchema = 'main',
#         vocabularyDatabaseSchema = 'main',
#         cohortTable = 'cohort')
# Run the application with cdm1 demo and BIOMERIS demo ATLAS
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "postgresql",
user = Sys.getenv("CDM_USERNAME"),
password = Sys.getenv("CDM_PASSWORD"),
server = "54.77.2.157/OMOP",
port = 5432,
pathToDriver = "/Users/vramella/R/drivers")
connection <- DatabaseConnector::connect(connectionDetails = connectionDetails)
baseUrl = 'http://34.253.42.86:8080/WebAPI'
run_app(baseUrl = baseUrl,
authMethod = "db",
webApiUsername = Sys.getenv("WEBAPI_USERNAME"),
webApiPassword = Sys.getenv("WEBAPI_PASSWORD"),
connection = connection,
cdmDbSchema = 'cdm1',
vocabularyDatabaseSchema = 'cdm1',
cohortTable = 'cohort')
